#!/usr/bin/env python3
# Toto je prostredie vykon√°vania pre slovensk√© programovacie n√°reƒçie U≈æovka.
# Poƒçiatoƒçn√© uskutoƒçnenie je nap√≠san√© v n√°reƒç√≠ Pyt√≥n

import tokenize
from io import BytesIO
import sys
import csv
import os

def load_substitutions_from_csv(filename):
    """Naƒç√≠taj p√°ri prekladu z ƒåOH s√∫boru."""
    substitutions = {}
    with open(filename, mode='r', encoding='utf-8') as file:
        reader = csv.reader(file)
        for row in reader:
            narecie, python_keyword = row
            substitutions[narecie] = python_keyword  # U≈æovka -> Python
    return substitutions

def substitute_code(code, substitutions):
    """Vikonaj preklad z U≈æovki do Pit√≥nu."""
    result = []
    tokens = tokenize.tokenize(BytesIO(code.encode('utf-8')).readline)
    
    # Tokenize and substitute both names and operators/symbols
    for token in tokens:
        if token.type in {tokenize.NAME, tokenize.OP} and token.string in substitutions:
            result.append((token.type, substitutions[token.string]))
        else:
            result.append((token.type, token.string))
            
    return tokenize.untokenize(result).decode('utf-8')

def save_translated_code(filename, translated_code):
    """Ulo≈æ prelo≈æen√≠ k√≥d do nov√©ho spisu."""
    translated_filename = filename.replace("üêç", "pit√≥n")  # Example of renaming the extension
    with open(translated_filename, 'w', encoding='utf-8') as f:
        f.write(translated_code)
    return translated_filename

def run_translated_code(filename):
    """Vikonaj prelo≈æen√≠ k√≥d pomocou Pit√≥nov√©ho vikon√°vaƒça."""
    os.system(f"python {filename}")

def delete_translated_file(filename):
    """Odstr√°≈à prelo≈æen√≠ s√∫bor."""
    if os.path.exists(filename):
        os.remove(filename)

if __name__ == '__main__':
    if len(sys.argv) < 2:
        print("Pou≈æitje: u≈æovka <meno_spisu>")
        sys.exit(1)

    # Naƒç√≠taj p√°ri prekladu z ƒåOH spisu
    substitutions = load_substitutions_from_csv('narecia.coh')

    # Z√≠skaj n√°zov spisu zadan√©ho ako argument
    script_filename = sys.argv[1]

    # Krok 1: Prelo≈æenie spisu a jeho ulo≈æenie
    with open(script_filename, 'r', encoding='utf-8') as f:
        code = f.read()
    translated_code = substitute_code(code, substitutions)
    translated_filename = save_translated_code(script_filename, translated_code)

    # Krok 2: Spustenie prelo≈æen√©ho spisu a odstr√°nenie spisu
    try:
        run_translated_code(translated_filename)
    finally:
        # Ensure the translated file is deleted after execution
        delete_translated_file(translated_filename)
